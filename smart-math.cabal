cabal-version:      2.4
name:               smart-math
version:            0.1
license:            MIT
license-file:       LICENSE
tested-with:
  GHC ==9.2.8 || ==9.4.8 || ==9.6.5 || ==9.8.2 || ==9.10.1

copyright:          2022-2025 Thomas Bidne
author:             Thomas Bidne
maintainer:         tbidne@protonmail.com
homepage:           https://github.com/tbidne/smart-math/
bug-reports:        https://github.com/tbidne/smart-math/issues
synopsis:           Mathematical smart constructors
description:        Provides mathematical smart constructors
category:           Math, Numeric
extra-source-files: README.md
extra-doc-files:    CHANGELOG.md

source-repository head
  type:     git
  location: https://github.com/tbidne/smart-math

flag arithmoi
  description: Uses the much faster arithmoi for primality testing.
  default:     False
  manual:      True

common common-lang
  default-extensions:
    BangPatterns
    DataKinds
    DeriveAnyClass
    DeriveGeneric
    DeriveLift
    DerivingStrategies
    DerivingVia
    FlexibleContexts
    FlexibleInstances
    GADTs
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NegativeLiterals
    NoStarIsType
    NumericUnderscores
    OverloadedLabels
    OverloadedRecordDot
    OverloadedStrings
    PatternSynonyms
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    StandaloneKindSignatures
    TypeApplications
    TypeFamilies
    TypeOperators

  default-language:   Haskell2010

  if flag(arithmoi)
    cpp-options: -DUSE_ARITHMOI

-- NOTE: [TypeAbstractions default extensions]
--
-- We would like to enable TypeAbstractions globally i.e. the below logic,
-- however, that runs afoul of our format job because cabal/cabal-fmt does
-- not recognize the extension yet. We need a greater version of cabal,
-- presumably.
--
-- Until our ci (nix) has a cabal that recognizes TypeAbstractions,
-- enable it in the module.
--
--if impl(ghc >=9.8.1)
--  default-extensions: TypeAbstractions

library
  import:          common-lang
  exposed-modules:
    Numeric.Class.Division
    Numeric.Data.Fraction.Algebra
    Numeric.Data.Fraction.Algebra.Internal
    Numeric.Data.Fraction.Base
    Numeric.Data.Fraction.Base.Internal
    Numeric.Data.Internal.Utils
    Numeric.Data.Interval.Algebra
    Numeric.Data.Interval.Algebra.Internal
    Numeric.Data.Interval.Base
    Numeric.Data.Interval.Base.Internal
    Numeric.Data.ModN.Algebra
    Numeric.Data.ModN.Algebra.Internal
    Numeric.Data.ModN.Base
    Numeric.Data.ModN.Base.Internal
    Numeric.Data.ModP.Algebra
    Numeric.Data.ModP.Algebra.Internal
    Numeric.Data.ModP.Base
    Numeric.Data.ModP.Base.Internal
    Numeric.Data.ModP.Internal.Primality
    Numeric.Data.NonNegative.Algebra
    Numeric.Data.NonNegative.Algebra.Internal
    Numeric.Data.NonNegative.Base
    Numeric.Data.NonNegative.Base.Internal
    Numeric.Data.NonZero.Algebra
    Numeric.Data.NonZero.Algebra.Internal
    Numeric.Data.NonZero.Base
    Numeric.Data.NonZero.Base.Internal
    Numeric.Data.Positive.Algebra
    Numeric.Data.Positive.Algebra.Internal
    Numeric.Data.Positive.Base
    Numeric.Data.Positive.Base.Internal

  build-depends:
    , algebra-simple    ^>=0.1
    , base              >=4.16.0.0 && <4.21
    , bounds            ^>=0.1
    , deepseq           >=1.4.4.0  && <1.6
    , optics-core       ^>=0.4
    , random            ^>=1.2.0
    , template-haskell  >=2.17.0.0 && <2.23
    , text              >=1.2.4.0  && <2.2
    , text-display      >=0.0.3.0  && <0.6

  if flag(arithmoi)
    build-depends:
      , arithmoi  ^>=0.13.0.0
      , mod       ^>=0.2.0.1

  hs-source-dirs:  src
  ghc-options:     -Wmissing-import-lists

executable prime-prof
  import:         common-lang
  main-is:        Main.hs
  build-depends:
    , base
    , smart-math

  hs-source-dirs: prime-prof
  ghc-options:    -Wmissing-import-lists

test-suite doctest
  import:         common-lang
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , base
    , doctest    >=0.16.3 && <0.23
    , env-guard  ^>=0.2

  hs-source-dirs: test/doctest
  ghc-options:    -Wmissing-import-lists

test-suite unit
  import:         common-lang
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  other-modules:
    Equality
    Gens
    Test.Algebra.Additive.AGroup
    Test.Algebra.Additive.AMonoid
    Test.Algebra.Additive.ASemigroup
    Test.Algebra.Multiplicative.MGroup
    Test.Algebra.Multiplicative.MMonoid
    Test.Algebra.Multiplicative.MSemigroup
    Test.Data.Fraction
    Test.Data.Interval
    Test.Data.ModN
    Test.Data.ModP
    Test.Data.ModP.Internal
    Test.Data.NonNegative
    Test.Data.NonZero
    Test.Data.Positive
    Test.Prelude
    Test.TestBounds
    Utils

  build-depends:
    , algebra-simple
    , base
    , bounds
    , deepseq
    , hedgehog        >=1.0.2   && <1.5
    , optics-core
    , smart-math
    , tasty           >=1.1.0.3 && <1.6
    , tasty-hedgehog  >=1.0.0.2 && <1.5
    , tasty-hunit     >=0.9     && <0.11
    , text-display

  hs-source-dirs: test/unit
  ghc-options:    -threaded -with-rtsopts=-N

benchmark benchmarks
  import:         common-lang
  type:           exitcode-stdio-1.0
  main-is:        Main.hs
  build-depends:
    , base
    , smart-math
    , tasty-bench  ^>=0.3

  hs-source-dirs: benchmarks
  ghc-options:    -Wmissing-import-lists
